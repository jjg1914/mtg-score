(function(){angular.module("mtg",["ui.router","angular-gestures","sprintf"])}).call(this),angular.module("mtg").run(["$templateCache",function(t){t.put("mtg/mtg-index.tpl.html",'<div class="mtg-score-board"><div ng-repeat="player in players" class="mtg-score"><div class="mtg-score-player">{{ player.name }}</div><div class="mtg-score-display"><span hm-tap="score(player,-1)" hm-hold="score(player,1)" class="mtg-jumbo">{{ player | mtgScoreFormat : settings.initialScore }}</span></div><div ng-if="player.historyLatest != null" class="mtg-score-history-latest"><span ng-class="{ \'mtg-bg-negative\': player.historyLatest &lt; 0, \'mtg-bg-positive\': player.historyLatest &gt;= 0 }">{{ "%+i" | sprintf : player.historyLatest }}</span></div><div class="mtg-score-history"><div ng-class="{ \'mtg-text-negative\': item &lt; 0, \'mtg-text-positive\': item &gt;= 0 }" ng-repeat="item in player.history track by $index" class="mtg-score-history-item">{{ "%+i" | sprintf : item }}</div></div><div class="mtg-score-control"><div hm-tap="score(player,-5)" class="mtg-score-control-item">-5</div><div hm-tap="score(player,+5)" class="mtg-score-control-item">+5</div><div hm-tap="score(player,-10)" class="mtg-score-control-item">-10</div><div hm-tap="score(player,+10)" class="mtg-score-control-item">+10</div></div></div></div>'),t.put("mtg/mtg-menu.tpl.html",'<ul class="mtg-menu"><li hm-tap="newGame()" class="mtg-menu-item">New Game</li><li class="mtg-menu-item">Roll</li><li class="mtg-menu-item">Lookup</li></ul>'),t.put("mtg/mtg-number-input.tpl.html",'<div class="mtg-input mtg-number-input"><div class="mtg-number-input-display">{{ value }}</div><div class="mtg-number-input-control"><span ng-class="{\'mtg-text-muted\': value &gt;= 50}" hm-tap="increment()" class="mtg-number-input-control-item">+</span><span ng-class="{\'mtg-text-muted\': value &lt;= 10}" hm-tap="decrement()" class="mtg-number-input-control-item">&#8722;</span></div></div>'),t.put("mtg/mtg-settings.tpl.html",'<form><div class="mtg-form-input"><label for="initial-score">Initial Score:</label><mtg-number-input value="settings.initialScore"></mtg-number-input></div></form>')}]),function(){angular.module("mtg").controller("mtgSettingsController",["$scope",function(t){}])}.call(this),function(){angular.module("mtg").filter("mtgScoreFormat",function(){return function(t,e){var r,n,l,i;for(i=t.history,n=0,l=i.length;l>n;n++)r=i[n],e+=r;return null!=t.historyLatest&&(e+=t.historyLatest),e}})}.call(this),function(){angular.module("mtg").directive("mtgNumberInput",function(){return{restrict:"E",replace:!0,scope:{value:"="},templateUrl:"mtg/mtg-number-input.tpl.html",link:function(t){return t.decrement=function(){return t.value>10?t.value-=10:void 0},t.increment=function(){return t.value<50?t.value+=10:void 0}}}})}.call(this),function(){angular.module("mtg").controller("mtgMenuController",["$scope","$state",function(t,e){return t.newGame=function(){return t.players.length=0,t.players.push({name:"Player 1",history:[],historyLatest:null}),t.players.push({name:"Player 2",history:[],historyLatest:null}),e.go("index")}}])}.call(this),function(){angular.module("mtg").controller("mtgIndexController",["$scope","$timeout",function(t,e){return t.score=function(t,r){return t.score+=r,t.historyLatest+=r,null!=t.historyTimeout&&e.cancel(t.historyTimeout),t.historyTimeout=e(function(){return t.historyLatest&&t.history.push(t.historyLatest),t.historyLatest=null,delete t.historyTimeout},5e3)}}])}.call(this),function(){angular.module("mtg").controller("mtgController",["$scope","$state",function(t,e){var r;return r=["menu","index","settings"],t.players=[{name:"Player 1",history:[],historyLatest:null},{name:"Player 2",history:[],historyLatest:null}],t.settings={initialScore:20},t.navigate=function(t){var n,l;return n=t.direction===Hammer.DIRECTION_LEFT?1:-1,l=r.indexOf(e.current.name)+n,l>=0&&l<r.length?e.go(r[l]):void 0}}])}.call(this),function(){angular.module("mtg").config(["$stateProvider","$urlRouterProvider",function(t,e){return t.state("index",{url:"/",templateUrl:"mtg/mtg-index.tpl.html",controller:"mtgIndexController"}).state("menu",{url:"/menu",templateUrl:"mtg/mtg-menu.tpl.html",controller:"mtgMenuController"}).state("settings",{url:"/settings",templateUrl:"mtg/mtg-settings.tpl.html",controller:"mtgSettingsController"}),e.otherwise("/")}])}.call(this),function(){angular.module("mtg").config(["hammerDefaultOptsProvider",function(t){return t.set({recognizers:[[Hammer.Tap,{event:"tap"}],[Hammer.Press,{event:"press"}],[Hammer.Swipe,{event:"swipe",direction:Hammer.DIRECTION_HORIZONTAL}]]})}])}.call(this);
//# sourceMappingURL=index.js.map