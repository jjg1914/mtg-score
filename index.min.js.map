{"version":3,"sources":["index.coffee","index.js","mtg/mtg-boolean-input.tpl.jade","mtg/mtg-index.tpl.jade","mtg/mtg-menu.tpl.jade","mtg/mtg-number-input.tpl.jade","mtg/mtg-roll.tpl.jade","mtg/mtg-settings.tpl.jade","mtg/mtg-vibrate.coffee","mtg/mtg-vibrate.js","mtg/mtg-settings-controller.coffee","mtg/mtg-settings-controller.js","mtg/mtg-score-format.coffee","mtg/mtg-score-format.js","mtg/mtg-roll-controller.coffee","mtg/mtg-roll-controller.js","mtg/mtg-number-input.coffee","mtg/mtg-number-input.js","mtg/mtg-menu-controller.coffee","mtg/mtg-menu-controller.js","mtg/mtg-index-controller.coffee","mtg/mtg-index-controller.js","mtg/mtg-controller.coffee","mtg/mtg-controller.js","mtg/mtg-boolean-input.coffee","mtg/mtg-boolean-input.js","config.state.coffee","config.state.js","config.hover.coffee","config.hover.js","config.hammer.coffee","config.hammer.js"],"names":["angular","module","call","this","run","$templateCache","put","factory","navigator","vibrate","webkitVibrate","mozVibrate","msVibrate","millieseconds","controller","$scope","filter","value","initial","e","i","len","ref","history","length","historyLatest","$interval","toggleRoll","interval","Math","floor","random","settings","roll","rollOffset","cancel","$on","directive","mtgVibrate","restrict","replace","scope","min","max","step","format","templateUrl","link","decrement","increment","$state","newGame","players","push","name","go","$timeout","_saveHistory","player","historyTimeout","scoreDelay","decrementScore","clearScore","invertScore","_navigate","localStorage","JSON","parse","initialScore","window","addEventListener","stringify","navigate","direction","index","Hammer","DIRECTION_LEFT","indexOf","current","toggle","config","$stateProvider","$urlRouterProvider","state","url","otherwise","document","body","classes","results","getElementsByTagName","className","split","join","splice","hammerDefaultOptsProvider","set","recognizers","Tap","event","Press","Swipe","DIRECTION_HORIZONTAL"],"mappings":"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","file":"index.min.js","sourcesContent":["angular.module \"mtg\", [ \"ui.router\", \"angular-gestures\", \"sprintf\" ]\n","(function() {\n  angular.module(\"mtg\", [\"ui.router\", \"angular-gestures\", \"sprintf\"]);\n\n}).call(this);\n",".mtg-input.mtg-boolean-input\n  span(hm-tap=\"toggle\") {{ value ? \"Yes\" : \"No\" }}\n",".mtg-score-board\n  .mtg-score(ng-repeat=\"player in players\")\n    .mtg-score-display\n      .mtg-score-hitbox(hm-tap=\"decrementScore(player)\" hm-hold=\"invertScore(player)\")\n        span.mtg-jumbo\n          | {{ player | mtgScoreFormat : settings.initialScore }}\n    .mtg-score-history-latest(\n        ng-if=\"player.historyLatest != null\"\n        hm-hold=\"clearScore(player)\")\n      span(ng-class=\"{ 'mtg-bg-negative': player.historyLatest < 0, 'mtg-bg-positive': player.historyLatest >= 0 }\")\n        | {{ \"%+i\" | sprintf : player.historyLatest }}\n    .mtg-score-history\n      .mtg-score-history-item(\n        ng-class=\"{ 'mtg-text-negative': item < 0, 'mtg-text-positive': item >= 0 }\"\n        ng-repeat=\"item in player.history track by $index\")\n        | {{ \"%+i\" | sprintf : item }}\n","ul.mtg-menu\n  li.mtg-menu-item(hm-tap=\"newGame()\") New Game\n  li.mtg-menu-item(ui-sref=\"roll\") Roll\n  li.mtg-menu-item Lookup\n",".mtg-input.mtg-number-input\n  .mtg-number-input-display {{ format | sprintf : value }}\n  .mtg-number-input-control\n    span.mtg-number-input-control-item(\n      ng-class=\"{'mtg-text-muted': value >= max}\"\n      hm-tap=\"increment()\")\n      | +\n    span.mtg-number-input-control-item(\n      ng-class=\"{'mtg-text-muted': value <= min}\"\n      hm-tap=\"decrement()\")\n      | &#8722;\n",".mtg-roll\n  .mtg-roll-inner\n    span.mtg-extra-jumbo(hm-tap=\"toggleRoll()\")\n      | {{ value }}\n","form\n  .mtg-form-input\n    label(for=\"initial-score\") Initial Score\n    mtg-number-input(value=\"settings.initialScore\" min=\"10\" max=\"50\" step=\"10\")\n  .mtg-form-input\n    label(for=\"score-delay\")\n      | Score Delay \n    mtg-number-input(value=\"settings.scoreDelay\" min=\"1\" max=\"10\")\n  .mtg-form-input\n    label(for=\"roll\") Roll\n    mtg-number-input(value=\"settings.roll\" min=\"6\" max=\"20\")\n  .mtg-form-input\n    label(for=\"roll-offset\") Roll Offset\n    mtg-boolean-input(value=\"settings.rollOffset\")\n","angular.module(\"mtg\").factory \"mtgVibrate\", ->\n  navigator.vibrate ?= navigator.webkitVibrate || navigator.mozVibrate ||\n    navigator.msVibrate\n\n  (millieseconds) ->\n    if navigator.vibrate\n      navigator.vibrate millieseconds\n","(function() {\n  angular.module(\"mtg\").factory(\"mtgVibrate\", function() {\n    if (navigator.vibrate == null) {\n      navigator.vibrate = navigator.webkitVibrate || navigator.mozVibrate || navigator.msVibrate;\n    }\n    return function(millieseconds) {\n      if (navigator.vibrate) {\n        return navigator.vibrate(millieseconds);\n      }\n    };\n  });\n\n}).call(this);\n","angular.module(\"mtg\").controller \"mtgSettingsController\", ($scope) ->\n","(function() {\n  angular.module(\"mtg\").controller(\"mtgSettingsController\", function($scope) {});\n\n}).call(this);\n","angular.module(\"mtg\").filter \"mtgScoreFormat\", ->\n  (value,initial) ->\n    initial += e for e in value.history\n    initial += value.historyLatest if value.historyLatest?\n    initial\n","(function() {\n  angular.module(\"mtg\").filter(\"mtgScoreFormat\", function() {\n    return function(value, initial) {\n      var e, i, len, ref;\n      ref = value.history;\n      for (i = 0, len = ref.length; i < len; i++) {\n        e = ref[i];\n        initial += e;\n      }\n      if (value.historyLatest != null) {\n        initial += value.historyLatest;\n      }\n      return initial;\n    };\n  });\n\n}).call(this);\n","angular.module(\"mtg\").controller \"mtgRollController\", ($scope,$interval) ->\n  $scope.toggleRoll = ->\n    unless $scope.interval?\n      $scope.interval = $interval ->\n        value = $scope.value\n        while value == $scope.value\n          value = Math.floor(Math.random() * $scope.settings.roll)\n          value += 1 if $scope.settings.rollOffset\n        $scope.value = value\n      , 100\n    else\n      $scope.value = Math.floor(Math.random() * $scope.settings.roll)\n      $scope.value += 1 if $scope.settings.rollOffset\n      $interval.cancel $scope.interval\n      delete $scope.interval\n\n  $scope.toggleRoll()\n\n  $scope.$on \"$destroy\", ->\n    $interval.cancel $scope.interval if $scope.interval?\n","(function() {\n  angular.module(\"mtg\").controller(\"mtgRollController\", function($scope, $interval) {\n    $scope.toggleRoll = function() {\n      if ($scope.interval == null) {\n        return $scope.interval = $interval(function() {\n          var value;\n          value = $scope.value;\n          while (value === $scope.value) {\n            value = Math.floor(Math.random() * $scope.settings.roll);\n            if ($scope.settings.rollOffset) {\n              value += 1;\n            }\n          }\n          return $scope.value = value;\n        }, 100);\n      } else {\n        $scope.value = Math.floor(Math.random() * $scope.settings.roll);\n        if ($scope.settings.rollOffset) {\n          $scope.value += 1;\n        }\n        $interval.cancel($scope.interval);\n        return delete $scope.interval;\n      }\n    };\n    $scope.toggleRoll();\n    return $scope.$on(\"$destroy\", function() {\n      if ($scope.interval != null) {\n        return $interval.cancel($scope.interval);\n      }\n    });\n  });\n\n}).call(this);\n","angular.module(\"mtg\").directive \"mtgNumberInput\", (mtgVibrate)->\n  restrict: \"E\"\n  replace: true\n  scope:\n    value: \"=\"\n    min: \"=\"\n    max: \"=\"\n    step: \"=\"\n    format: \"@\"\n  templateUrl: \"mtg/mtg-number-input.tpl.html\"\n  link: ($scope) ->\n    $scope.format ?= \"%i\"\n\n    $scope.decrement = ->\n      if $scope.value > $scope.min\n        $scope.value -= ($scope.step || 1)\n        mtgVibrate 20\n\n    $scope.increment = ->\n      if $scope.value < $scope.max\n        $scope.value += ($scope.step || 1)\n        mtgVibrate 20\n","(function() {\n  angular.module(\"mtg\").directive(\"mtgNumberInput\", function(mtgVibrate) {\n    return {\n      restrict: \"E\",\n      replace: true,\n      scope: {\n        value: \"=\",\n        min: \"=\",\n        max: \"=\",\n        step: \"=\",\n        format: \"@\"\n      },\n      templateUrl: \"mtg/mtg-number-input.tpl.html\",\n      link: function($scope) {\n        if ($scope.format == null) {\n          $scope.format = \"%i\";\n        }\n        $scope.decrement = function() {\n          if ($scope.value > $scope.min) {\n            $scope.value -= $scope.step || 1;\n            return mtgVibrate(20);\n          }\n        };\n        return $scope.increment = function() {\n          if ($scope.value < $scope.max) {\n            $scope.value += $scope.step || 1;\n            return mtgVibrate(20);\n          }\n        };\n      }\n    };\n  });\n\n}).call(this);\n","angular.module(\"mtg\").controller \"mtgMenuController\", ($scope,$state,mtgVibrate) ->\n\n  $scope.newGame = ->\n    mtgVibrate 20\n    $scope.players.length = 0\n    $scope.players.push\n      name: \"Player 1\"\n      history: []\n      historyLatest: null\n    $scope.players.push\n      name: \"Player 2\"\n      history: []\n      historyLatest: null\n    $state.go \"index\"\n","(function() {\n  angular.module(\"mtg\").controller(\"mtgMenuController\", function($scope, $state, mtgVibrate) {\n    return $scope.newGame = function() {\n      mtgVibrate(20);\n      $scope.players.length = 0;\n      $scope.players.push({\n        name: \"Player 1\",\n        history: [],\n        historyLatest: null\n      });\n      $scope.players.push({\n        name: \"Player 2\",\n        history: [],\n        historyLatest: null\n      });\n      return $state.go(\"index\");\n    };\n  });\n\n}).call(this);\n","angular.module(\"mtg\").controller \"mtgIndexController\", ($scope,$timeout,\n  mtgVibrate) ->\n\n  _saveHistory = (player) ->\n    if player.historyTimeout?\n      $timeout.cancel player.historyTimeout\n    player.historyTimeout = $timeout ->\n      player.history.push player.historyLatest if player.historyLatest\n      player.historyLatest = null\n      delete player.historyTimeout\n    , $scope.settings.scoreDelay * 1000\n\n  $scope.decrementScore = (player) ->\n    if player.historyLatest?\n      player.historyLatest += if player.historyLatest > 0 then 1 else -1\n    else\n      player.historyLatest = -1\n    mtgVibrate 20\n    _saveHistory player\n\n  $scope.clearScore = (player) ->\n    player.historyLatest = null\n    if player.historyTimeout?\n      mtgVibrate 20\n      $timeout.cancel player.historyTimeout\n      delete player.historyTimeout\n\n  $scope.invertScore = (player) ->\n    if player.historyLatest?\n      player.historyLatest *= -1\n    else\n      player.historyLatest = 1\n    mtgVibrate 20\n    _saveHistory player\n","(function() {\n  angular.module(\"mtg\").controller(\"mtgIndexController\", function($scope, $timeout, mtgVibrate) {\n    var _saveHistory;\n    _saveHistory = function(player) {\n      if (player.historyTimeout != null) {\n        $timeout.cancel(player.historyTimeout);\n      }\n      return player.historyTimeout = $timeout(function() {\n        if (player.historyLatest) {\n          player.history.push(player.historyLatest);\n        }\n        player.historyLatest = null;\n        return delete player.historyTimeout;\n      }, $scope.settings.scoreDelay * 1000);\n    };\n    $scope.decrementScore = function(player) {\n      if (player.historyLatest != null) {\n        player.historyLatest += player.historyLatest > 0 ? 1 : -1;\n      } else {\n        player.historyLatest = -1;\n      }\n      mtgVibrate(20);\n      return _saveHistory(player);\n    };\n    $scope.clearScore = function(player) {\n      player.historyLatest = null;\n      if (player.historyTimeout != null) {\n        mtgVibrate(20);\n        $timeout.cancel(player.historyTimeout);\n        return delete player.historyTimeout;\n      }\n    };\n    return $scope.invertScore = function(player) {\n      if (player.historyLatest != null) {\n        player.historyLatest *= -1;\n      } else {\n        player.historyLatest = 1;\n      }\n      mtgVibrate(20);\n      return _saveHistory(player);\n    };\n  });\n\n}).call(this);\n","angular.module(\"mtg\").controller \"mtgController\", ($scope,$state) ->\n\n  _navigate = [\n    \"menu\"\n    \"index\"\n    \"settings\"\n  ]\n\n  $scope.players = [\n    {\n      name: \"Player 1\"\n      history: []\n      historyLatest: null\n    }\n    {\n      name: \"Player 2\"\n      history: []\n      historyLatest: null\n    }\n  ]\n\n  if localStorage[\"mtg-settings\"]\n    $scope.settings = JSON.parse localStorage[\"mtg-settings\"]\n  else\n    $scope.settings =\n      initialScore: 20\n      roll: 10\n      rollOffset: false\n      scoreDelay: 5\n\n  window.addEventListener \"beforeunload\", ->\n    localStorage[\"mtg-settings\"] = JSON.stringify $scope.settings\n\n  $scope.navigate = (e) ->\n    direction = if e.direction == Hammer.DIRECTION_LEFT then 1 else -1\n    index = _navigate.indexOf($state.current.name)\n    if index == -1\n      $state.go \"index\"\n    else\n      index += direction\n      if index >= 0 and index < _navigate.length\n        $state.go _navigate[index]\n","(function() {\n  angular.module(\"mtg\").controller(\"mtgController\", function($scope, $state) {\n    var _navigate;\n    _navigate = [\"menu\", \"index\", \"settings\"];\n    $scope.players = [\n      {\n        name: \"Player 1\",\n        history: [],\n        historyLatest: null\n      }, {\n        name: \"Player 2\",\n        history: [],\n        historyLatest: null\n      }\n    ];\n    if (localStorage[\"mtg-settings\"]) {\n      $scope.settings = JSON.parse(localStorage[\"mtg-settings\"]);\n    } else {\n      $scope.settings = {\n        initialScore: 20,\n        roll: 10,\n        rollOffset: false,\n        scoreDelay: 5\n      };\n    }\n    window.addEventListener(\"beforeunload\", function() {\n      return localStorage[\"mtg-settings\"] = JSON.stringify($scope.settings);\n    });\n    return $scope.navigate = function(e) {\n      var direction, index;\n      direction = e.direction === Hammer.DIRECTION_LEFT ? 1 : -1;\n      index = _navigate.indexOf($state.current.name);\n      if (index === -1) {\n        return $state.go(\"index\");\n      } else {\n        index += direction;\n        if (index >= 0 && index < _navigate.length) {\n          return $state.go(_navigate[index]);\n        }\n      }\n    };\n  });\n\n}).call(this);\n","angular.module(\"mtg\").directive \"mtgBooleanInput\", (mtgVibrate)->\n  restrict: \"E\"\n  replace: true\n  scope:\n    value: \"=\"\n  templateUrl: \"mtg/mtg-boolean-input.tpl.html\"\n  link: ($scope) ->\n    $scope.toggle = ->\n      mtgVibrate 20\n      $scope.value = !$scope.value\n","(function() {\n  angular.module(\"mtg\").directive(\"mtgBooleanInput\", function(mtgVibrate) {\n    return {\n      restrict: \"E\",\n      replace: true,\n      scope: {\n        value: \"=\"\n      },\n      templateUrl: \"mtg/mtg-boolean-input.tpl.html\",\n      link: function($scope) {\n        return $scope.toggle = function() {\n          mtgVibrate(20);\n          return $scope.value = !$scope.value;\n        };\n      }\n    };\n  });\n\n}).call(this);\n","angular.module(\"mtg\").config ($stateProvider,$urlRouterProvider) ->\n  $stateProvider\n    .state \"index\",\n      url: \"/\"\n      templateUrl: \"mtg/mtg-index.tpl.html\"\n      controller: \"mtgIndexController\"\n    .state \"menu\",\n      url: \"/menu\"\n      templateUrl: \"mtg/mtg-menu.tpl.html\"\n      controller: \"mtgMenuController\"\n    .state \"roll\",\n      url: \"/roll\"\n      templateUrl: \"mtg/mtg-roll.tpl.html\"\n      controller: \"mtgRollController\"\n    .state \"settings\",\n      url: \"/settings\"\n      templateUrl: \"mtg/mtg-settings.tpl.html\"\n      controller: \"mtgSettingsController\"\n\n  $urlRouterProvider.otherwise \"/\"\n","(function() {\n  angular.module(\"mtg\").config(function($stateProvider, $urlRouterProvider) {\n    $stateProvider.state(\"index\", {\n      url: \"/\",\n      templateUrl: \"mtg/mtg-index.tpl.html\",\n      controller: \"mtgIndexController\"\n    }).state(\"menu\", {\n      url: \"/menu\",\n      templateUrl: \"mtg/mtg-menu.tpl.html\",\n      controller: \"mtgMenuController\"\n    }).state(\"roll\", {\n      url: \"/roll\",\n      templateUrl: \"mtg/mtg-roll.tpl.html\",\n      controller: \"mtgRollController\"\n    }).state(\"settings\", {\n      url: \"/settings\",\n      templateUrl: \"mtg/mtg-settings.tpl.html\",\n      controller: \"mtgSettingsController\"\n    });\n    return $urlRouterProvider.otherwise(\"/\");\n  });\n\n}).call(this);\n","angular.module(\"mtg\").config  ->\n  document.body.addEventListener \"mouseenter\", ->\n    for e in document.getElementsByTagName \"body\"\n      classes = e.className.split /\\s+/\n      if classes.indexOf(\"mtg-hover\") == -1\n        classes.push \"mtg-hover\"\n      e.className = classes.join \" \"\n\n  document.body.addEventListener \"mouseleave\", ->\n    for e in document.getElementsByTagName \"body\"\n      classes = e.className.split /\\s+/\n      if (index = classes.indexOf(\"mtg-hover\") > -1)\n        classes.splice index, 1\n      e.className = classes.join \" \"\n","(function() {\n  angular.module(\"mtg\").config(function() {\n    document.body.addEventListener(\"mouseenter\", function() {\n      var classes, e, i, len, ref, results;\n      ref = document.getElementsByTagName(\"body\");\n      results = [];\n      for (i = 0, len = ref.length; i < len; i++) {\n        e = ref[i];\n        classes = e.className.split(/\\s+/);\n        if (classes.indexOf(\"mtg-hover\") === -1) {\n          classes.push(\"mtg-hover\");\n        }\n        results.push(e.className = classes.join(\" \"));\n      }\n      return results;\n    });\n    return document.body.addEventListener(\"mouseleave\", function() {\n      var classes, e, i, index, len, ref, results;\n      ref = document.getElementsByTagName(\"body\");\n      results = [];\n      for (i = 0, len = ref.length; i < len; i++) {\n        e = ref[i];\n        classes = e.className.split(/\\s+/);\n        if ((index = classes.indexOf(\"mtg-hover\") > -1)) {\n          classes.splice(index, 1);\n        }\n        results.push(e.className = classes.join(\" \"));\n      }\n      return results;\n    });\n  });\n\n}).call(this);\n","angular.module(\"mtg\").config (hammerDefaultOptsProvider) ->\n  hammerDefaultOptsProvider.set\n    recognizers: [\n      [ Hammer.Tap, { event: \"tap\" } ]\n      [ Hammer.Press, { event: \"press\" } ]\n      [ Hammer.Swipe,\n        event: \"swipe\",\n        direction: Hammer.DIRECTION_HORIZONTAL\n      ]\n    ]\n","(function() {\n  angular.module(\"mtg\").config(function(hammerDefaultOptsProvider) {\n    return hammerDefaultOptsProvider.set({\n      recognizers: [\n        [\n          Hammer.Tap, {\n            event: \"tap\"\n          }\n        ], [\n          Hammer.Press, {\n            event: \"press\"\n          }\n        ], [\n          Hammer.Swipe, {\n            event: \"swipe\",\n            direction: Hammer.DIRECTION_HORIZONTAL\n          }\n        ]\n      ]\n    });\n  });\n\n}).call(this);\n"],"sourceRoot":"/source/"}